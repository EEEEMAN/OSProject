
Allocating common symbols
Common symbol       size              file

g_cursorOffset      0x4               bin/mainKernel.o
g_taskManager       0x14              bin/mainKernel.o
g_KeyboardBuffer    0x88              bin/mainKernel.o
g_memoryManager     0x1f44            bin/mainKernel.o
g_consoleAttribute  0x1               bin/mainKernel.o
g_KeyboardStatus    0x4               bin/mainKernel.o
g_scheduleEnable    0x1               bin/mScheduler.o
g_timerCount        0x4               bin/mainKernel.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 bin/mainKernel.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/GDT.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/graphics.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/utility2.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/PIC.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/IDT.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/keyboardControllor.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/shell.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/mMemory.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/mScheduler.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/mString.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/console.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/interruptHandler.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/mList.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/PCI.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/task.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/HDControllor.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/PIT.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                [!provide]                        PROVIDE (__executable_start, SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048074                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.text           0x0000000000600000     0x3da0
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000600000      0x276 bin/mainKernel.o
                0x0000000000600000                _entry
 .text          0x0000000000600276       0xd2 bin/GDT.o
                0x0000000000600276                setDescriptor
                0x00000000006002d9                initGDT
 .text          0x0000000000600348       0xc4 bin/graphics.o
                0x0000000000600348                initGraphicsPalette
                0x00000000006003cf                drawPixel
 .text          0x000000000060040c       0xcb bin/utility2.o
                0x000000000060040c                memcopy
                0x0000000000600441                memSet
                0x0000000000600473                memCmp
 .text          0x00000000006004d7      0x16a bin/PIC.o
                0x00000000006004d7                initPIC
                0x0000000000600593                maskPIC
                0x00000000006005d4                getIMR
                0x0000000000600611                sendEOI
 .text          0x0000000000600641      0x4a5 bin/IDT.o
                0x0000000000600641                initIDT
                0x0000000000600a9a                setIDTDescriptor
 .text          0x0000000000600ae6      0x3c7 bin/keyboardControllor.o
                0x0000000000600ae6                isOutBufferFull
                0x0000000000600b15                isInBufferFull
                0x0000000000600b44                activeKBC
                0x0000000000600b5c                activeKeyboard
                0x0000000000600bb7                clearKBCBuffer
                0x0000000000600bd0                writeKBCCommand
                0x0000000000600c1b                readKBCStatus
                0x0000000000600c30                writeKBCBuffer
                0x0000000000600c7b                readKBCBuffer
                0x0000000000600c90                KBCechoTest
                0x0000000000600ccf                waitKBCOutBufferFull
                0x0000000000600d02                convertScanCodeToASCIICode
                0x0000000000600d42                waitACK
                0x0000000000600d8d                getScancodeType
                0x0000000000600de6                mouseEnable
                0x0000000000600e69                mouseInterruptEnable
 .text          0x0000000000600ead      0xd1e bin/shell.o
                0x0000000000600ead                shellRun
                0x0000000000600f30                keyboardBufferHandler
                0x00000000006010d7                CommandCompareAndExcute
                0x0000000000601189                showCommandList
                0x00000000006011d6                setTextColor
                0x00000000006013ed                clear
                0x00000000006013ff                pciDevice
                0x000000000060149b                showEFLAGS
                0x00000000006014be                showCR0
                0x00000000006014e1                showMemory
                0x0000000000601540                showTask
                0x00000000006015cd                killTask
                0x0000000000601686                showTimer_sub
                0x00000000006016df                showTimer
                0x0000000000601712                cursorAnimation_sub
                0x0000000000601787                lineAnimationR_sub
                0x00000000006018f0                lineAnimationL_sub
                0x0000000000601a59                animationTest
 .text          0x0000000000601bcb      0x3ac bin/mMemory.o
                0x0000000000601bcb                checkMemory
                0x0000000000601c88                initMemoryManager
                0x0000000000601cc7                mMalloc
                0x0000000000601d99                mFree
 .text          0x0000000000601f77      0x3be bin/mScheduler.o
                0x0000000000601f77                setEnableScheduler
                0x0000000000601f9c                initTaskPool
                0x000000000060204c                schedule
                0x0000000000602165                createTask
                0x0000000000602259                deleteTask
 .text          0x0000000000602335      0x3f2 bin/mString.o
                0x0000000000602335                getStrLen
                0x000000000060235d                makeStrByVaList
                0x000000000060249e                itoa
                0x000000000060257c                itoa16
                0x0000000000602610                mAtoi
                0x0000000000602689                reverseStr
                0x0000000000602703                csPrintf
 .text          0x0000000000602727      0x51d bin/console.o
                0x0000000000602727                initVideoMemory
                0x000000000060273c                clearScreen
                0x000000000060279c                printString
                0x000000000060280c                printStringWhereCursor
                0x0000000000602984                printChar
                0x00000000006029c3                setCursor
                0x0000000000602a29                cPrintf
                0x0000000000602a77                removeCharacter
                0x0000000000602acc                bClearScreen
                0x0000000000602b12                bPrintString
                0x0000000000602b74                bPrintChar
                0x0000000000602ba4                bPrintf
                0x0000000000602c02                bRemoveCharacter
 .text          0x0000000000602c44       0xfb bin/interruptHandler.o
                0x0000000000602c44                defaultHandler
                0x0000000000602c78                UnknownHandler
                0x0000000000602c96                keyboardHandler
                0x0000000000602d17                testTimerHandler
 .text          0x0000000000602d3f      0x3ba bin/mList.o
                0x0000000000602d3f                initList
                0x0000000000602d62                insertItemBack
                0x0000000000602dd8                deleteItemFront
                0x0000000000602e7f                deleteItemBack
                0x0000000000602f5b                popItem
                0x0000000000602f80                removeItem
                0x0000000000603043                searchItem
                0x00000000006030a4                getItem
 .text          0x00000000006030f9       0x65 bin/PCI.o
                0x00000000006030f9                getPCICSData
 .text          0x000000000060315e      0x18d bin/task.o
                0x000000000060315e                initTSSDescriptors
                0x00000000006031dc                initTSS
 .text          0x00000000006032eb       0xad bin/HDControllor.o
                0x00000000006032eb                readHDDInfo
                0x0000000000603341                changeHDDInterruptStatus
 .text          0x0000000000603398       0xda bin/PIT.o
                0x0000000000603398                initPIT
                0x000000000060340a                mSleep
 *fill*         0x0000000000603472        0xe 90909090
 .text          0x0000000000603480      0x16a bin/asmfunc2.o
                0x0000000000603480                in8bits
                0x000000000060348f                out8bits
                0x00000000006034a3                in16bits
                0x00000000006034b3                out16bits
                0x00000000006034c8                in32bits
                0x00000000006034d7                out32bits
                0x00000000006034eb                loadIDT
                0x0000000000603513                enableInterrupt
                0x0000000000603515                disableInterrupt
                0x0000000000603517                hltCall
                0x0000000000603519                loadGDT
                0x0000000000603558                loadTR
                0x0000000000603565                taskswitch
                0x000000000060356a                getEFLAGS
                0x000000000060356d                setEFLAGS
                0x0000000000603579                getCR0Register
                0x000000000060357d                setCR0Register
                0x000000000060358a                getInterruptStatus
                0x0000000000603591                setInterruptStatus
                0x00000000006035a5                memoryTest
 *fill*         0x00000000006035ea        0x6 90909090
 .text          0x00000000006035f0      0x7b0 bin/ISR.o
                0x00000000006035f0                isrDivideZero
                0x0000000000603627                isrDebugMode
                0x000000000060365e                isrNMI
                0x0000000000603695                isrINT3
                0x00000000006036cc                isrOverflow
                0x0000000000603703                isrOverAddress
                0x000000000060373a                isrNonExistCommand
                0x0000000000603771                isrNonExistDevice
                0x00000000006037a8                isrContinuousException
                0x00000000006037e7                isrCoprocessorError
                0x000000000060381e                isrTSSError
                0x000000000060385d                isrOverSegment
                0x000000000060389c                isrStackSegmentError
                0x00000000006038db                isrViolidProtectRule
                0x000000000060391a                isrPageFault
                0x0000000000603959                isrNonDefiled
                0x0000000000603990                isrFloatingError
                0x00000000006039c7                isrAligndError
                0x0000000000603a06                isrMachineCheckError
                0x0000000000603a3d                isrSIMDError
                0x0000000000603a74                isrVirtualizationError
                0x0000000000603aab                isrControlProtectionException
                0x0000000000603ae2                isrDefault22
                0x0000000000603b19                isrDefault23
                0x0000000000603b50                isrDefault24
                0x0000000000603b87                isrDefault25
                0x0000000000603bbe                isrDefault26
                0x0000000000603bf5                isrDefault27
                0x0000000000603c2c                isrDefault28
                0x0000000000603c63                isrDefault29
                0x0000000000603c9a                isrDefault31
                0x0000000000603cd1                isrSecurityError
                0x0000000000603d10                isrTimerInterrupt
                0x0000000000603d40                isrKeyboardInterrupt
                0x0000000000603d70                isrDefault
 *(.gnu.warning)

.rodata         0x0000000000603da0      0x40d
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x0000000000603da0      0x199 bin/mainKernel.o
 .rodata        0x0000000000603f39      0x222 bin/shell.o
 *fill*         0x000000000060415b        0x1 
 .rodata        0x000000000060415c       0x51 bin/interruptHandler.o

.rodata1
 *(.rodata1)
                0x0000000000604200                . = ALIGN (0x200)

.data           0x0000000000604200      0x352
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000604200       0xb2 bin/mainKernel.o
 .data          0x00000000006042b2        0x0 bin/GDT.o
 .data          0x00000000006042b2        0x0 bin/graphics.o
 .data          0x00000000006042b2        0x0 bin/utility2.o
 .data          0x00000000006042b2        0x0 bin/PIC.o
 .data          0x00000000006042b2        0x0 bin/IDT.o
 *fill*         0x00000000006042b2        0xe 
 .data          0x00000000006042c0       0xb2 bin/keyboardControllor.o
 *fill*         0x0000000000604372        0xe 
 .data          0x0000000000604380      0x118 bin/shell.o
                0x0000000000604440                commands
 .data          0x0000000000604498        0x0 bin/mMemory.o
 .data          0x0000000000604498        0x0 bin/mScheduler.o
 .data          0x0000000000604498        0x0 bin/mString.o
 .data          0x0000000000604498        0x0 bin/console.o
 *fill*         0x0000000000604498        0x8 
 .data          0x00000000006044a0       0xb2 bin/interruptHandler.o
 .data          0x0000000000604552        0x0 bin/mList.o
 .data          0x0000000000604552        0x0 bin/PCI.o
 .data          0x0000000000604552        0x0 bin/task.o
 .data          0x0000000000604552        0x0 bin/HDControllor.o
 .data          0x0000000000604552        0x0 bin/PIT.o

.data1
 *(.data1)
                0x0000000000604552                __bss_start = .

.bss            0x0000000000604560     0x2014
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000604560        0x0 bin/mainKernel.o
 .bss           0x0000000000604560        0x0 bin/GDT.o
 .bss           0x0000000000604560        0x0 bin/graphics.o
 .bss           0x0000000000604560        0x0 bin/utility2.o
 .bss           0x0000000000604560        0x0 bin/PIC.o
 .bss           0x0000000000604560        0x0 bin/IDT.o
 .bss           0x0000000000604560        0x0 bin/keyboardControllor.o
 .bss           0x0000000000604560        0x0 bin/shell.o
 .bss           0x0000000000604560        0x0 bin/mMemory.o
 .bss           0x0000000000604560        0x0 bin/mScheduler.o
 .bss           0x0000000000604560        0x0 bin/mString.o
 .bss           0x0000000000604560        0x0 bin/console.o
 .bss           0x0000000000604560        0x0 bin/interruptHandler.o
 .bss           0x0000000000604560        0x0 bin/mList.o
 .bss           0x0000000000604560        0x0 bin/PCI.o
 .bss           0x0000000000604560        0x0 bin/task.o
 .bss           0x0000000000604560        0x0 bin/HDControllor.o
 .bss           0x0000000000604560        0x0 bin/PIT.o
 *(COMMON)
 COMMON         0x0000000000604560     0x2010 bin/mainKernel.o
                0x0000000000604560                g_cursorOffset
                0x0000000000604564                g_taskManager
                0x0000000000604580                g_KeyboardBuffer
                0x0000000000604620                g_memoryManager
                0x0000000000606564                g_consoleAttribute
                0x0000000000606568                g_KeyboardStatus
                0x000000000060656c                g_timerCount
 COMMON         0x0000000000606570        0x1 bin/mScheduler.o
                0x0000000000606570                g_scheduleEnable
                0x0000000000606574                . = ALIGN ((. != 0x0)?0x4:0x1)
 *fill*         0x0000000000606571        0x3 
                0x0000000000606574                . = ALIGN (0x4)
                0x0000000000606574                . = ALIGN (0x4)
                0x0000000000606574                _end = .
                [!provide]                        PROVIDE (end, .)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rel.text       0x0000000000606574        0x0
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000000606574        0x0 bin/mainKernel.o

.rel.fini
 *(.rel.fini)

.rel.rodata
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)

.rel.data.rel.ro
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)

.rel.data
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)

.rel.tdata
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)

.rel.tbss
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)

.rel.ctors
 *(.rel.ctors)

.rel.dtors
 *(.rel.dtors)

.rel.got        0x0000000000606574        0x0
 *(.rel.got)
 .rel.got       0x0000000000606574        0x0 bin/mainKernel.o

.rel.bss
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)

.rel.ifunc
 *(.rel.ifunc)

.rel.plt        0x0000000000606574        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
 .rel.iplt      0x0000000000606574        0x0 bin/mainKernel.o
                [!provide]                        PROVIDE (__rel_iplt_end, .)

.init
 *(SORT(.init))

.plt            0x0000000000606578        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000000606578        0x0 bin/mainKernel.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.fini
 *(SORT(.fini))
                [!provide]                        PROVIDE (__etext, .)
                [!provide]                        PROVIDE (_etext, .)
                [!provide]                        PROVIDE (etext, .)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x0000000000606574      0xc04
 *(.eh_frame)
 .eh_frame      0x0000000000606574       0x34 bin/mainKernel.o
 .eh_frame      0x00000000006065a8       0x40 bin/GDT.o
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000006065e8       0x40 bin/graphics.o
                                         0x58 (size before relaxing)
 .eh_frame      0x0000000000606628       0x60 bin/utility2.o
                                         0x78 (size before relaxing)
 .eh_frame      0x0000000000606688       0x80 bin/PIC.o
                                         0x98 (size before relaxing)
 .eh_frame      0x0000000000606708       0x40 bin/IDT.o
                                         0x58 (size before relaxing)
 .eh_frame      0x0000000000606748      0x200 bin/keyboardControllor.o
                                        0x218 (size before relaxing)
 .eh_frame      0x0000000000606948      0x22c bin/shell.o
                                        0x244 (size before relaxing)
 .eh_frame      0x0000000000606b74       0x80 bin/mMemory.o
                                         0x98 (size before relaxing)
 .eh_frame      0x0000000000606bf4       0xa0 bin/mScheduler.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x0000000000606c94       0xe4 bin/mString.o
                                         0xfc (size before relaxing)
 .eh_frame      0x0000000000606d78      0x1a0 bin/console.o
                                        0x1b8 (size before relaxing)
 .eh_frame      0x0000000000606f18       0x80 bin/interruptHandler.o
                                         0x98 (size before relaxing)
 .eh_frame      0x0000000000606f98      0x100 bin/mList.o
                                        0x118 (size before relaxing)
 .eh_frame      0x0000000000607098       0x20 bin/PCI.o
                                         0x38 (size before relaxing)
 .eh_frame      0x00000000006070b8       0x40 bin/task.o
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000006070f8       0x40 bin/HDControllor.o
                                         0x58 (size before relaxing)
 .eh_frame      0x0000000000607138       0x40 bin/PIT.o
                                         0x58 (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x0000000000609000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000609000        0x0
                [!provide]                        PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end, .)

.init_array     0x0000000000609000        0x0
                [!provide]                        PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end, .)

.fini_array     0x0000000000609000        0x0
                [!provide]                        PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x0000000000609000        0x0
 *(.got)
 .got           0x0000000000609000        0x0 bin/mainKernel.o
 *(.igot)
                0x0000000000609000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x0000000000609000        0x0
 *(.got.plt)
 .got.plt       0x0000000000609000        0x0 bin/mainKernel.o
 *(.igot.plt)
 .igot.plt      0x0000000000609000        0x0 bin/mainKernel.o
                0x0000000000609000                _edata = .
                [!provide]                        PROVIDE (edata, .)
                0x0000000000609000                . = .
                0x0000000000609000                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 bin/mainKernel.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 bin/GDT.o
 .comment       0x0000000000000011       0x12 bin/graphics.o
 .comment       0x0000000000000011       0x12 bin/utility2.o
 .comment       0x0000000000000011       0x12 bin/PIC.o
 .comment       0x0000000000000011       0x12 bin/IDT.o
 .comment       0x0000000000000011       0x12 bin/keyboardControllor.o
 .comment       0x0000000000000011       0x12 bin/shell.o
 .comment       0x0000000000000011       0x12 bin/mMemory.o
 .comment       0x0000000000000011       0x12 bin/mScheduler.o
 .comment       0x0000000000000011       0x12 bin/mString.o
 .comment       0x0000000000000011       0x12 bin/console.o
 .comment       0x0000000000000011       0x12 bin/interruptHandler.o
 .comment       0x0000000000000011       0x12 bin/mList.o
 .comment       0x0000000000000011       0x12 bin/PCI.o
 .comment       0x0000000000000011       0x12 bin/task.o
 .comment       0x0000000000000011       0x12 bin/HDControllor.o
 .comment       0x0000000000000011       0x12 bin/PIT.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
LOAD bin/mainKernel.o
LOAD bin/GDT.o
LOAD bin/graphics.o
LOAD bin/utility2.o
LOAD bin/PIC.o
LOAD bin/IDT.o
LOAD bin/keyboardControllor.o
LOAD bin/shell.o
LOAD bin/mMemory.o
LOAD bin/mScheduler.o
LOAD bin/mString.o
LOAD bin/console.o
LOAD bin/interruptHandler.o
LOAD bin/mList.o
LOAD bin/PCI.o
LOAD bin/task.o
LOAD bin/HDControllor.o
LOAD bin/PIT.o
LOAD bin/asmfunc2.o
LOAD bin/ISR.o
OUTPUT(bin/kernel.elf elf32-i386)
