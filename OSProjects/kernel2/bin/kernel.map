
Allocating common symbols
Common symbol       size              file

g_cursorOffset      0x4               bin/mainKernel.o
g_taskManager       0x14              bin/mainKernel.o
g_KeyboardBuffer    0x88              bin/mainKernel.o
g_memoryManager     0x1f44            bin/mainKernel.o
g_consoleAttribute  0x1               bin/mainKernel.o
g_KeyboardStatus    0x4               bin/mainKernel.o
g_scheduleEnable    0x1               bin/mScheduler.o
g_timerCount        0x4               bin/mainKernel.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 bin/mainKernel.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/GDT.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/utility2.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/PIC.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/IDT.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/keyboardControllor.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/shell.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/mMemory.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/mScheduler.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/mString.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/console.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/interruptHandler.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/mList.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/PCI.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/task.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/HDControllor.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/PIT.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                [!provide]                        PROVIDE (__executable_start, SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.text           0x0000000000600000     0x3b20
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000600000      0x1cd bin/mainKernel.o
                0x0000000000600000                _entry
 .text          0x00000000006001cd       0xd2 bin/GDT.o
                0x00000000006001cd                setDescriptor
                0x0000000000600230                initGDT
 .text          0x000000000060029f       0xcb bin/utility2.o
                0x000000000060029f                memcopy
                0x00000000006002d4                memSet
                0x0000000000600306                memCmp
 .text          0x000000000060036a      0x125 bin/PIC.o
                0x000000000060036a                initPIC
                0x000000000060041e                maskPIC
                0x000000000060045f                sendEOI
 .text          0x000000000060048f      0x4a5 bin/IDT.o
                0x000000000060048f                initIDT
                0x00000000006008e8                setIDTDescriptor
 .text          0x0000000000600934      0x300 bin/keyboardControllor.o
                0x0000000000600934                isOutBufferFull
                0x0000000000600963                isInBufferFull
                0x0000000000600992                activeKBC
                0x00000000006009aa                activeKeyboard
                0x0000000000600a05                clearKBCBuffer
                0x0000000000600a1e                writeKBCCommand
                0x0000000000600a69                readKBCStatus
                0x0000000000600a7e                writeKBCBuffer
                0x0000000000600ac9                readKBCBuffer
                0x0000000000600ade                KBCechoTest
                0x0000000000600b1d                waitKBCOutBufferFull
                0x0000000000600b50                convertScanCodeToASCIICode
                0x0000000000600b90                waitACK
                0x0000000000600bdb                getScancodeType
 .text          0x0000000000600c34      0xd1e bin/shell.o
                0x0000000000600c34                shellRun
                0x0000000000600cb7                keyboardBufferHandler
                0x0000000000600e5e                CommandCompareAndExcute
                0x0000000000600f10                showCommandList
                0x0000000000600f5d                setTextColor
                0x0000000000601174                clear
                0x0000000000601186                pciDevice
                0x0000000000601222                showEFLAGS
                0x0000000000601245                showCR0
                0x0000000000601268                showMemory
                0x00000000006012c7                showTask
                0x0000000000601354                killTask
                0x000000000060140d                showTimer_sub
                0x0000000000601466                showTimer
                0x0000000000601499                cursorAnimation_sub
                0x000000000060150e                lineAnimationR_sub
                0x0000000000601677                lineAnimationL_sub
                0x00000000006017e0                animationTest
 .text          0x0000000000601952      0x3ac bin/mMemory.o
                0x0000000000601952                checkMemory
                0x0000000000601a0f                initMemoryManager
                0x0000000000601a4e                mMalloc
                0x0000000000601b20                mFree
 .text          0x0000000000601cfe      0x3be bin/mScheduler.o
                0x0000000000601cfe                setEnableScheduler
                0x0000000000601d23                initTaskPool
                0x0000000000601dd3                schedule
                0x0000000000601eec                createTask
                0x0000000000601fe0                deleteTask
 .text          0x00000000006020bc      0x3f2 bin/mString.o
                0x00000000006020bc                getStrLen
                0x00000000006020e4                makeStrByVaList
                0x0000000000602225                itoa
                0x0000000000602303                itoa16
                0x0000000000602397                mAtoi
                0x0000000000602410                reverseStr
                0x000000000060248a                csPrintf
 .text          0x00000000006024ae      0x51d bin/console.o
                0x00000000006024ae                initVideoMemory
                0x00000000006024c3                clearScreen
                0x0000000000602523                printString
                0x0000000000602593                printStringWhereCursor
                0x000000000060270b                printChar
                0x000000000060274a                setCursor
                0x00000000006027b0                cPrintf
                0x00000000006027fe                removeCharacter
                0x0000000000602853                bClearScreen
                0x0000000000602899                bPrintString
                0x00000000006028fb                bPrintChar
                0x000000000060292b                bPrintf
                0x0000000000602989                bRemoveCharacter
 .text          0x00000000006029cb       0xfb bin/interruptHandler.o
                0x00000000006029cb                defaultHandler
                0x00000000006029ff                UnknownHandler
                0x0000000000602a1d                keyboardHandler
                0x0000000000602a9e                testTimerHandler
 .text          0x0000000000602ac6      0x3ba bin/mList.o
                0x0000000000602ac6                initList
                0x0000000000602ae9                insertItemBack
                0x0000000000602b5f                deleteItemFront
                0x0000000000602c06                deleteItemBack
                0x0000000000602ce2                popItem
                0x0000000000602d07                removeItem
                0x0000000000602dca                searchItem
                0x0000000000602e2b                getItem
 .text          0x0000000000602e80       0x65 bin/PCI.o
                0x0000000000602e80                getPCICSData
 .text          0x0000000000602ee5      0x18d bin/task.o
                0x0000000000602ee5                initTSSDescriptors
                0x0000000000602f63                initTSS
 .text          0x0000000000603072       0xad bin/HDControllor.o
                0x0000000000603072                readHDDInfo
                0x00000000006030c8                changeHDDInterruptStatus
 .text          0x000000000060311f       0xda bin/PIT.o
                0x000000000060311f                initPIT
                0x0000000000603191                mSleep
 *fill*         0x00000000006031f9        0x7 90909090
 .text          0x0000000000603200      0x16a bin/asmfunc2.o
                0x0000000000603200                in8bits
                0x000000000060320f                out8bits
                0x0000000000603223                in16bits
                0x0000000000603233                out16bits
                0x0000000000603248                in32bits
                0x0000000000603257                out32bits
                0x000000000060326b                loadIDT
                0x0000000000603293                enableInterrupt
                0x0000000000603295                disableInterrupt
                0x0000000000603297                hltCall
                0x0000000000603299                loadGDT
                0x00000000006032d8                loadTR
                0x00000000006032e5                taskswitch
                0x00000000006032ea                getEFLAGS
                0x00000000006032ed                setEFLAGS
                0x00000000006032f9                getCR0Register
                0x00000000006032fd                setCR0Register
                0x000000000060330a                getInterruptStatus
                0x0000000000603311                setInterruptStatus
                0x0000000000603325                memoryTest
 *fill*         0x000000000060336a        0x6 90909090
 .text          0x0000000000603370      0x7b0 bin/ISR.o
                0x0000000000603370                isrDivideZero
                0x00000000006033a7                isrDebugMode
                0x00000000006033de                isrNMI
                0x0000000000603415                isrINT3
                0x000000000060344c                isrOverflow
                0x0000000000603483                isrOverAddress
                0x00000000006034ba                isrNonExistCommand
                0x00000000006034f1                isrNonExistDevice
                0x0000000000603528                isrContinuousException
                0x0000000000603567                isrCoprocessorError
                0x000000000060359e                isrTSSError
                0x00000000006035dd                isrOverSegment
                0x000000000060361c                isrStackSegmentError
                0x000000000060365b                isrViolidProtectRule
                0x000000000060369a                isrPageFault
                0x00000000006036d9                isrNonDefiled
                0x0000000000603710                isrFloatingError
                0x0000000000603747                isrAligndError
                0x0000000000603786                isrMachineCheckError
                0x00000000006037bd                isrSIMDError
                0x00000000006037f4                isrVirtualizationError
                0x000000000060382b                isrControlProtectionException
                0x0000000000603862                isrDefault22
                0x0000000000603899                isrDefault23
                0x00000000006038d0                isrDefault24
                0x0000000000603907                isrDefault25
                0x000000000060393e                isrDefault26
                0x0000000000603975                isrDefault27
                0x00000000006039ac                isrDefault28
                0x00000000006039e3                isrDefault29
                0x0000000000603a1a                isrDefault31
                0x0000000000603a51                isrSecurityError
                0x0000000000603a90                isrTimerInterrupt
                0x0000000000603ac0                isrKeyboardInterrupt
                0x0000000000603af0                isrDefault
 *(.gnu.warning)

.rodata         0x0000000000603b20      0x3e1
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x0000000000603b20      0x16b bin/mainKernel.o
 .rodata        0x0000000000603c8b      0x222 bin/shell.o
 *fill*         0x0000000000603ead        0x3 
 .rodata        0x0000000000603eb0       0x51 bin/interruptHandler.o

.rodata1
 *(.rodata1)
                0x0000000000604000                . = ALIGN (0x200)

.data           0x0000000000604000      0x358
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000604000       0xb2 bin/mainKernel.o
 .data          0x00000000006040b2        0x0 bin/GDT.o
 .data          0x00000000006040b2        0x0 bin/utility2.o
 .data          0x00000000006040b2        0x0 bin/PIC.o
 .data          0x00000000006040b2        0x0 bin/IDT.o
 *fill*         0x00000000006040b2        0xe 
 .data          0x00000000006040c0       0xb2 bin/keyboardControllor.o
 *fill*         0x0000000000604172        0xe 
 .data          0x0000000000604180      0x118 bin/shell.o
                0x0000000000604240                commands
 .data          0x0000000000604298        0x0 bin/mMemory.o
 .data          0x0000000000604298        0x0 bin/mScheduler.o
 .data          0x0000000000604298        0x0 bin/mString.o
 .data          0x0000000000604298        0x0 bin/console.o
 *fill*         0x0000000000604298        0x8 
 .data          0x00000000006042a0       0xb8 bin/interruptHandler.o
                0x0000000000604354                curt
 .data          0x0000000000604358        0x0 bin/mList.o
 .data          0x0000000000604358        0x0 bin/PCI.o
 .data          0x0000000000604358        0x0 bin/task.o
 .data          0x0000000000604358        0x0 bin/HDControllor.o
 .data          0x0000000000604358        0x0 bin/PIT.o

.data1
 *(.data1)
                0x0000000000604358                __bss_start = .

.bss            0x0000000000604360     0x2014
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000604360        0x0 bin/mainKernel.o
 .bss           0x0000000000604360        0x0 bin/GDT.o
 .bss           0x0000000000604360        0x0 bin/utility2.o
 .bss           0x0000000000604360        0x0 bin/PIC.o
 .bss           0x0000000000604360        0x0 bin/IDT.o
 .bss           0x0000000000604360        0x0 bin/keyboardControllor.o
 .bss           0x0000000000604360        0x0 bin/shell.o
 .bss           0x0000000000604360        0x0 bin/mMemory.o
 .bss           0x0000000000604360        0x0 bin/mScheduler.o
 .bss           0x0000000000604360        0x0 bin/mString.o
 .bss           0x0000000000604360        0x0 bin/console.o
 .bss           0x0000000000604360        0x0 bin/interruptHandler.o
 .bss           0x0000000000604360        0x0 bin/mList.o
 .bss           0x0000000000604360        0x0 bin/PCI.o
 .bss           0x0000000000604360        0x0 bin/task.o
 .bss           0x0000000000604360        0x0 bin/HDControllor.o
 .bss           0x0000000000604360        0x0 bin/PIT.o
 *(COMMON)
 COMMON         0x0000000000604360     0x2010 bin/mainKernel.o
                0x0000000000604360                g_cursorOffset
                0x0000000000604364                g_taskManager
                0x0000000000604380                g_KeyboardBuffer
                0x0000000000604420                g_memoryManager
                0x0000000000606364                g_consoleAttribute
                0x0000000000606368                g_KeyboardStatus
                0x000000000060636c                g_timerCount
 COMMON         0x0000000000606370        0x1 bin/mScheduler.o
                0x0000000000606370                g_scheduleEnable
                0x0000000000606374                . = ALIGN ((. != 0x0)?0x4:0x1)
 *fill*         0x0000000000606371        0x3 
                0x0000000000606374                . = ALIGN (0x4)
                0x0000000000606374                . = ALIGN (0x4)
                0x0000000000606374                _end = .
                [!provide]                        PROVIDE (end, .)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rel.text       0x0000000000606374        0x0
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000000606374        0x0 bin/mainKernel.o

.rel.fini
 *(.rel.fini)

.rel.rodata
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)

.rel.data.rel.ro
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)

.rel.data
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)

.rel.tdata
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)

.rel.tbss
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)

.rel.ctors
 *(.rel.ctors)

.rel.dtors
 *(.rel.dtors)

.rel.got        0x0000000000606374        0x0
 *(.rel.got)
 .rel.got       0x0000000000606374        0x0 bin/mainKernel.o

.rel.bss
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)

.rel.ifunc
 *(.rel.ifunc)

.rel.plt        0x0000000000606374        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
 .rel.iplt      0x0000000000606374        0x0 bin/mainKernel.o
                [!provide]                        PROVIDE (__rel_iplt_end, .)

.init
 *(SORT(.init))

.plt            0x0000000000606378        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000000606378        0x0 bin/mainKernel.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.fini
 *(SORT(.fini))
                [!provide]                        PROVIDE (__etext, .)
                [!provide]                        PROVIDE (_etext, .)
                [!provide]                        PROVIDE (etext, .)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x0000000000606374      0xb68
 *(.eh_frame)
 .eh_frame      0x0000000000606374       0x38 bin/mainKernel.o
 .eh_frame      0x00000000006063ac       0x40 bin/GDT.o
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000006063ec       0x60 bin/utility2.o
                                         0x78 (size before relaxing)
 .eh_frame      0x000000000060644c       0x60 bin/PIC.o
                                         0x78 (size before relaxing)
 .eh_frame      0x00000000006064ac       0x40 bin/IDT.o
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000006064ec      0x1c0 bin/keyboardControllor.o
                                        0x1d8 (size before relaxing)
 .eh_frame      0x00000000006066ac      0x22c bin/shell.o
                                        0x244 (size before relaxing)
 .eh_frame      0x00000000006068d8       0x80 bin/mMemory.o
                                         0x98 (size before relaxing)
 .eh_frame      0x0000000000606958       0xa0 bin/mScheduler.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x00000000006069f8       0xe4 bin/mString.o
                                         0xfc (size before relaxing)
 .eh_frame      0x0000000000606adc      0x1a0 bin/console.o
                                        0x1b8 (size before relaxing)
 .eh_frame      0x0000000000606c7c       0x80 bin/interruptHandler.o
                                         0x98 (size before relaxing)
 .eh_frame      0x0000000000606cfc      0x100 bin/mList.o
                                        0x118 (size before relaxing)
 .eh_frame      0x0000000000606dfc       0x20 bin/PCI.o
                                         0x38 (size before relaxing)
 .eh_frame      0x0000000000606e1c       0x40 bin/task.o
                                         0x58 (size before relaxing)
 .eh_frame      0x0000000000606e5c       0x40 bin/HDControllor.o
                                         0x58 (size before relaxing)
 .eh_frame      0x0000000000606e9c       0x40 bin/PIT.o
                                         0x58 (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x0000000000608000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000608000        0x0
                [!provide]                        PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end, .)

.init_array     0x0000000000608000        0x0
                [!provide]                        PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end, .)

.fini_array     0x0000000000608000        0x0
                [!provide]                        PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x0000000000608000        0x0
 *(.got)
 .got           0x0000000000608000        0x0 bin/mainKernel.o
 *(.igot)
                0x0000000000608000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x0000000000608000        0x0
 *(.got.plt)
 .got.plt       0x0000000000608000        0x0 bin/mainKernel.o
 *(.igot.plt)
 .igot.plt      0x0000000000608000        0x0 bin/mainKernel.o
                0x0000000000608000                _edata = .
                [!provide]                        PROVIDE (edata, .)
                0x0000000000608000                . = .
                0x0000000000608000                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 bin/mainKernel.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 bin/GDT.o
 .comment       0x0000000000000011       0x12 bin/utility2.o
 .comment       0x0000000000000011       0x12 bin/PIC.o
 .comment       0x0000000000000011       0x12 bin/IDT.o
 .comment       0x0000000000000011       0x12 bin/keyboardControllor.o
 .comment       0x0000000000000011       0x12 bin/shell.o
 .comment       0x0000000000000011       0x12 bin/mMemory.o
 .comment       0x0000000000000011       0x12 bin/mScheduler.o
 .comment       0x0000000000000011       0x12 bin/mString.o
 .comment       0x0000000000000011       0x12 bin/console.o
 .comment       0x0000000000000011       0x12 bin/interruptHandler.o
 .comment       0x0000000000000011       0x12 bin/mList.o
 .comment       0x0000000000000011       0x12 bin/PCI.o
 .comment       0x0000000000000011       0x12 bin/task.o
 .comment       0x0000000000000011       0x12 bin/HDControllor.o
 .comment       0x0000000000000011       0x12 bin/PIT.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
LOAD bin/mainKernel.o
LOAD bin/GDT.o
LOAD bin/utility2.o
LOAD bin/PIC.o
LOAD bin/IDT.o
LOAD bin/keyboardControllor.o
LOAD bin/shell.o
LOAD bin/mMemory.o
LOAD bin/mScheduler.o
LOAD bin/mString.o
LOAD bin/console.o
LOAD bin/interruptHandler.o
LOAD bin/mList.o
LOAD bin/PCI.o
LOAD bin/task.o
LOAD bin/HDControllor.o
LOAD bin/PIT.o
LOAD bin/asmfunc2.o
LOAD bin/ISR.o
OUTPUT(bin/kernel.elf elf32-i386)
