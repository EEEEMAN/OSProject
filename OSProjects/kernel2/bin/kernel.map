
Allocating common symbols
Common symbol       size              file

g_cursorOffset      0x4               bin/mainKernel.o
g_taskManager       0x14              bin/mainKernel.o
g_KeyboardBuffer    0x88              bin/mainKernel.o
g_memoryManager     0x1f44            bin/mainKernel.o
g_consoleAttribute  0x1               bin/mainKernel.o
g_KeyboardStatus    0x4               bin/mainKernel.o
g_scheduleEnable    0x1               bin/mScheduler.o
g_timerCount        0x4               bin/mainKernel.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 bin/mainKernel.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/GDT.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/graphics.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/utility2.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/PIC.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/IDT.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/keyboardControllor.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/shell.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/mMemory.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/mScheduler.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/mString.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/console.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/interruptHandler.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/mList.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/PCI.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/task.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/HDControllor.o
 .note.GNU-stack
                0x0000000000000000        0x0 bin/PIT.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                [!provide]                        PROVIDE (__executable_start, SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048074                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.text           0x0000000000600000     0x3c40
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000600000      0x228 bin/mainKernel.o
                0x0000000000600000                _entry
 .text          0x0000000000600228       0xd2 bin/GDT.o
                0x0000000000600228                setDescriptor
                0x000000000060028b                initGDT
 .text          0x00000000006002fa       0xc4 bin/graphics.o
                0x00000000006002fa                initGraphicsPalette
                0x0000000000600381                drawPixel
 .text          0x00000000006003be       0xcb bin/utility2.o
                0x00000000006003be                memcopy
                0x00000000006003f3                memSet
                0x0000000000600425                memCmp
 .text          0x0000000000600489      0x125 bin/PIC.o
                0x0000000000600489                initPIC
                0x000000000060053d                maskPIC
                0x000000000060057e                sendEOI
 .text          0x00000000006005ae      0x4a5 bin/IDT.o
                0x00000000006005ae                initIDT
                0x0000000000600a07                setIDTDescriptor
 .text          0x0000000000600a53      0x300 bin/keyboardControllor.o
                0x0000000000600a53                isOutBufferFull
                0x0000000000600a82                isInBufferFull
                0x0000000000600ab1                activeKBC
                0x0000000000600ac9                activeKeyboard
                0x0000000000600b24                clearKBCBuffer
                0x0000000000600b3d                writeKBCCommand
                0x0000000000600b88                readKBCStatus
                0x0000000000600b9d                writeKBCBuffer
                0x0000000000600be8                readKBCBuffer
                0x0000000000600bfd                KBCechoTest
                0x0000000000600c3c                waitKBCOutBufferFull
                0x0000000000600c6f                convertScanCodeToASCIICode
                0x0000000000600caf                waitACK
                0x0000000000600cfa                getScancodeType
 .text          0x0000000000600d53      0xd1e bin/shell.o
                0x0000000000600d53                shellRun
                0x0000000000600dd6                keyboardBufferHandler
                0x0000000000600f7d                CommandCompareAndExcute
                0x000000000060102f                showCommandList
                0x000000000060107c                setTextColor
                0x0000000000601293                clear
                0x00000000006012a5                pciDevice
                0x0000000000601341                showEFLAGS
                0x0000000000601364                showCR0
                0x0000000000601387                showMemory
                0x00000000006013e6                showTask
                0x0000000000601473                killTask
                0x000000000060152c                showTimer_sub
                0x0000000000601585                showTimer
                0x00000000006015b8                cursorAnimation_sub
                0x000000000060162d                lineAnimationR_sub
                0x0000000000601796                lineAnimationL_sub
                0x00000000006018ff                animationTest
 .text          0x0000000000601a71      0x3ac bin/mMemory.o
                0x0000000000601a71                checkMemory
                0x0000000000601b2e                initMemoryManager
                0x0000000000601b6d                mMalloc
                0x0000000000601c3f                mFree
 .text          0x0000000000601e1d      0x3be bin/mScheduler.o
                0x0000000000601e1d                setEnableScheduler
                0x0000000000601e42                initTaskPool
                0x0000000000601ef2                schedule
                0x000000000060200b                createTask
                0x00000000006020ff                deleteTask
 .text          0x00000000006021db      0x3f2 bin/mString.o
                0x00000000006021db                getStrLen
                0x0000000000602203                makeStrByVaList
                0x0000000000602344                itoa
                0x0000000000602422                itoa16
                0x00000000006024b6                mAtoi
                0x000000000060252f                reverseStr
                0x00000000006025a9                csPrintf
 .text          0x00000000006025cd      0x51d bin/console.o
                0x00000000006025cd                initVideoMemory
                0x00000000006025e2                clearScreen
                0x0000000000602642                printString
                0x00000000006026b2                printStringWhereCursor
                0x000000000060282a                printChar
                0x0000000000602869                setCursor
                0x00000000006028cf                cPrintf
                0x000000000060291d                removeCharacter
                0x0000000000602972                bClearScreen
                0x00000000006029b8                bPrintString
                0x0000000000602a1a                bPrintChar
                0x0000000000602a4a                bPrintf
                0x0000000000602aa8                bRemoveCharacter
 .text          0x0000000000602aea       0xfb bin/interruptHandler.o
                0x0000000000602aea                defaultHandler
                0x0000000000602b1e                UnknownHandler
                0x0000000000602b3c                keyboardHandler
                0x0000000000602bbd                testTimerHandler
 .text          0x0000000000602be5      0x3ba bin/mList.o
                0x0000000000602be5                initList
                0x0000000000602c08                insertItemBack
                0x0000000000602c7e                deleteItemFront
                0x0000000000602d25                deleteItemBack
                0x0000000000602e01                popItem
                0x0000000000602e26                removeItem
                0x0000000000602ee9                searchItem
                0x0000000000602f4a                getItem
 .text          0x0000000000602f9f       0x65 bin/PCI.o
                0x0000000000602f9f                getPCICSData
 .text          0x0000000000603004      0x18d bin/task.o
                0x0000000000603004                initTSSDescriptors
                0x0000000000603082                initTSS
 .text          0x0000000000603191       0xad bin/HDControllor.o
                0x0000000000603191                readHDDInfo
                0x00000000006031e7                changeHDDInterruptStatus
 .text          0x000000000060323e       0xda bin/PIT.o
                0x000000000060323e                initPIT
                0x00000000006032b0                mSleep
 *fill*         0x0000000000603318        0x8 90909090
 .text          0x0000000000603320      0x16a bin/asmfunc2.o
                0x0000000000603320                in8bits
                0x000000000060332f                out8bits
                0x0000000000603343                in16bits
                0x0000000000603353                out16bits
                0x0000000000603368                in32bits
                0x0000000000603377                out32bits
                0x000000000060338b                loadIDT
                0x00000000006033b3                enableInterrupt
                0x00000000006033b5                disableInterrupt
                0x00000000006033b7                hltCall
                0x00000000006033b9                loadGDT
                0x00000000006033f8                loadTR
                0x0000000000603405                taskswitch
                0x000000000060340a                getEFLAGS
                0x000000000060340d                setEFLAGS
                0x0000000000603419                getCR0Register
                0x000000000060341d                setCR0Register
                0x000000000060342a                getInterruptStatus
                0x0000000000603431                setInterruptStatus
                0x0000000000603445                memoryTest
 *fill*         0x000000000060348a        0x6 90909090
 .text          0x0000000000603490      0x7b0 bin/ISR.o
                0x0000000000603490                isrDivideZero
                0x00000000006034c7                isrDebugMode
                0x00000000006034fe                isrNMI
                0x0000000000603535                isrINT3
                0x000000000060356c                isrOverflow
                0x00000000006035a3                isrOverAddress
                0x00000000006035da                isrNonExistCommand
                0x0000000000603611                isrNonExistDevice
                0x0000000000603648                isrContinuousException
                0x0000000000603687                isrCoprocessorError
                0x00000000006036be                isrTSSError
                0x00000000006036fd                isrOverSegment
                0x000000000060373c                isrStackSegmentError
                0x000000000060377b                isrViolidProtectRule
                0x00000000006037ba                isrPageFault
                0x00000000006037f9                isrNonDefiled
                0x0000000000603830                isrFloatingError
                0x0000000000603867                isrAligndError
                0x00000000006038a6                isrMachineCheckError
                0x00000000006038dd                isrSIMDError
                0x0000000000603914                isrVirtualizationError
                0x000000000060394b                isrControlProtectionException
                0x0000000000603982                isrDefault22
                0x00000000006039b9                isrDefault23
                0x00000000006039f0                isrDefault24
                0x0000000000603a27                isrDefault25
                0x0000000000603a5e                isrDefault26
                0x0000000000603a95                isrDefault27
                0x0000000000603acc                isrDefault28
                0x0000000000603b03                isrDefault29
                0x0000000000603b3a                isrDefault31
                0x0000000000603b71                isrSecurityError
                0x0000000000603bb0                isrTimerInterrupt
                0x0000000000603be0                isrKeyboardInterrupt
                0x0000000000603c10                isrDefault
 *(.gnu.warning)

.rodata         0x0000000000603c40      0x3ed
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x0000000000603c40      0x179 bin/mainKernel.o
 .rodata        0x0000000000603db9      0x222 bin/shell.o
 *fill*         0x0000000000603fdb        0x1 
 .rodata        0x0000000000603fdc       0x51 bin/interruptHandler.o

.rodata1
 *(.rodata1)
                0x0000000000604200                . = ALIGN (0x200)

.data           0x0000000000604200      0x358
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000604200       0xb2 bin/mainKernel.o
 .data          0x00000000006042b2        0x0 bin/GDT.o
 .data          0x00000000006042b2        0x0 bin/graphics.o
 .data          0x00000000006042b2        0x0 bin/utility2.o
 .data          0x00000000006042b2        0x0 bin/PIC.o
 .data          0x00000000006042b2        0x0 bin/IDT.o
 *fill*         0x00000000006042b2        0xe 
 .data          0x00000000006042c0       0xb2 bin/keyboardControllor.o
 *fill*         0x0000000000604372        0xe 
 .data          0x0000000000604380      0x118 bin/shell.o
                0x0000000000604440                commands
 .data          0x0000000000604498        0x0 bin/mMemory.o
 .data          0x0000000000604498        0x0 bin/mScheduler.o
 .data          0x0000000000604498        0x0 bin/mString.o
 .data          0x0000000000604498        0x0 bin/console.o
 *fill*         0x0000000000604498        0x8 
 .data          0x00000000006044a0       0xb8 bin/interruptHandler.o
                0x0000000000604554                curt
 .data          0x0000000000604558        0x0 bin/mList.o
 .data          0x0000000000604558        0x0 bin/PCI.o
 .data          0x0000000000604558        0x0 bin/task.o
 .data          0x0000000000604558        0x0 bin/HDControllor.o
 .data          0x0000000000604558        0x0 bin/PIT.o

.data1
 *(.data1)
                0x0000000000604558                __bss_start = .

.bss            0x0000000000604560     0x2014
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000604560        0x0 bin/mainKernel.o
 .bss           0x0000000000604560        0x0 bin/GDT.o
 .bss           0x0000000000604560        0x0 bin/graphics.o
 .bss           0x0000000000604560        0x0 bin/utility2.o
 .bss           0x0000000000604560        0x0 bin/PIC.o
 .bss           0x0000000000604560        0x0 bin/IDT.o
 .bss           0x0000000000604560        0x0 bin/keyboardControllor.o
 .bss           0x0000000000604560        0x0 bin/shell.o
 .bss           0x0000000000604560        0x0 bin/mMemory.o
 .bss           0x0000000000604560        0x0 bin/mScheduler.o
 .bss           0x0000000000604560        0x0 bin/mString.o
 .bss           0x0000000000604560        0x0 bin/console.o
 .bss           0x0000000000604560        0x0 bin/interruptHandler.o
 .bss           0x0000000000604560        0x0 bin/mList.o
 .bss           0x0000000000604560        0x0 bin/PCI.o
 .bss           0x0000000000604560        0x0 bin/task.o
 .bss           0x0000000000604560        0x0 bin/HDControllor.o
 .bss           0x0000000000604560        0x0 bin/PIT.o
 *(COMMON)
 COMMON         0x0000000000604560     0x2010 bin/mainKernel.o
                0x0000000000604560                g_cursorOffset
                0x0000000000604564                g_taskManager
                0x0000000000604580                g_KeyboardBuffer
                0x0000000000604620                g_memoryManager
                0x0000000000606564                g_consoleAttribute
                0x0000000000606568                g_KeyboardStatus
                0x000000000060656c                g_timerCount
 COMMON         0x0000000000606570        0x1 bin/mScheduler.o
                0x0000000000606570                g_scheduleEnable
                0x0000000000606574                . = ALIGN ((. != 0x0)?0x4:0x1)
 *fill*         0x0000000000606571        0x3 
                0x0000000000606574                . = ALIGN (0x4)
                0x0000000000606574                . = ALIGN (0x4)
                0x0000000000606574                _end = .
                [!provide]                        PROVIDE (end, .)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rel.text       0x0000000000606574        0x0
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000000606574        0x0 bin/mainKernel.o

.rel.fini
 *(.rel.fini)

.rel.rodata
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)

.rel.data.rel.ro
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)

.rel.data
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)

.rel.tdata
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)

.rel.tbss
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)

.rel.ctors
 *(.rel.ctors)

.rel.dtors
 *(.rel.dtors)

.rel.got        0x0000000000606574        0x0
 *(.rel.got)
 .rel.got       0x0000000000606574        0x0 bin/mainKernel.o

.rel.bss
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)

.rel.ifunc
 *(.rel.ifunc)

.rel.plt        0x0000000000606574        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
 .rel.iplt      0x0000000000606574        0x0 bin/mainKernel.o
                [!provide]                        PROVIDE (__rel_iplt_end, .)

.init
 *(SORT(.init))

.plt            0x0000000000606578        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000000606578        0x0 bin/mainKernel.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.fini
 *(SORT(.fini))
                [!provide]                        PROVIDE (__etext, .)
                [!provide]                        PROVIDE (_etext, .)
                [!provide]                        PROVIDE (etext, .)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x0000000000606574      0xba4
 *(.eh_frame)
 .eh_frame      0x0000000000606574       0x34 bin/mainKernel.o
 .eh_frame      0x00000000006065a8       0x40 bin/GDT.o
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000006065e8       0x40 bin/graphics.o
                                         0x58 (size before relaxing)
 .eh_frame      0x0000000000606628       0x60 bin/utility2.o
                                         0x78 (size before relaxing)
 .eh_frame      0x0000000000606688       0x60 bin/PIC.o
                                         0x78 (size before relaxing)
 .eh_frame      0x00000000006066e8       0x40 bin/IDT.o
                                         0x58 (size before relaxing)
 .eh_frame      0x0000000000606728      0x1c0 bin/keyboardControllor.o
                                        0x1d8 (size before relaxing)
 .eh_frame      0x00000000006068e8      0x22c bin/shell.o
                                        0x244 (size before relaxing)
 .eh_frame      0x0000000000606b14       0x80 bin/mMemory.o
                                         0x98 (size before relaxing)
 .eh_frame      0x0000000000606b94       0xa0 bin/mScheduler.o
                                         0xb8 (size before relaxing)
 .eh_frame      0x0000000000606c34       0xe4 bin/mString.o
                                         0xfc (size before relaxing)
 .eh_frame      0x0000000000606d18      0x1a0 bin/console.o
                                        0x1b8 (size before relaxing)
 .eh_frame      0x0000000000606eb8       0x80 bin/interruptHandler.o
                                         0x98 (size before relaxing)
 .eh_frame      0x0000000000606f38      0x100 bin/mList.o
                                        0x118 (size before relaxing)
 .eh_frame      0x0000000000607038       0x20 bin/PCI.o
                                         0x38 (size before relaxing)
 .eh_frame      0x0000000000607058       0x40 bin/task.o
                                         0x58 (size before relaxing)
 .eh_frame      0x0000000000607098       0x40 bin/HDControllor.o
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000006070d8       0x40 bin/PIT.o
                                         0x58 (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x0000000000609000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000609000        0x0
                [!provide]                        PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end, .)

.init_array     0x0000000000609000        0x0
                [!provide]                        PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end, .)

.fini_array     0x0000000000609000        0x0
                [!provide]                        PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x0000000000609000        0x0
 *(.got)
 .got           0x0000000000609000        0x0 bin/mainKernel.o
 *(.igot)
                0x0000000000609000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x0000000000609000        0x0
 *(.got.plt)
 .got.plt       0x0000000000609000        0x0 bin/mainKernel.o
 *(.igot.plt)
 .igot.plt      0x0000000000609000        0x0 bin/mainKernel.o
                0x0000000000609000                _edata = .
                [!provide]                        PROVIDE (edata, .)
                0x0000000000609000                . = .
                0x0000000000609000                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 bin/mainKernel.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 bin/GDT.o
 .comment       0x0000000000000011       0x12 bin/graphics.o
 .comment       0x0000000000000011       0x12 bin/utility2.o
 .comment       0x0000000000000011       0x12 bin/PIC.o
 .comment       0x0000000000000011       0x12 bin/IDT.o
 .comment       0x0000000000000011       0x12 bin/keyboardControllor.o
 .comment       0x0000000000000011       0x12 bin/shell.o
 .comment       0x0000000000000011       0x12 bin/mMemory.o
 .comment       0x0000000000000011       0x12 bin/mScheduler.o
 .comment       0x0000000000000011       0x12 bin/mString.o
 .comment       0x0000000000000011       0x12 bin/console.o
 .comment       0x0000000000000011       0x12 bin/interruptHandler.o
 .comment       0x0000000000000011       0x12 bin/mList.o
 .comment       0x0000000000000011       0x12 bin/PCI.o
 .comment       0x0000000000000011       0x12 bin/task.o
 .comment       0x0000000000000011       0x12 bin/HDControllor.o
 .comment       0x0000000000000011       0x12 bin/PIT.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
LOAD bin/mainKernel.o
LOAD bin/GDT.o
LOAD bin/graphics.o
LOAD bin/utility2.o
LOAD bin/PIC.o
LOAD bin/IDT.o
LOAD bin/keyboardControllor.o
LOAD bin/shell.o
LOAD bin/mMemory.o
LOAD bin/mScheduler.o
LOAD bin/mString.o
LOAD bin/console.o
LOAD bin/interruptHandler.o
LOAD bin/mList.o
LOAD bin/PCI.o
LOAD bin/task.o
LOAD bin/HDControllor.o
LOAD bin/PIT.o
LOAD bin/asmfunc2.o
LOAD bin/ISR.o
OUTPUT(bin/kernel.elf elf32-i386)
